{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30786,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"!pip install pyspark","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2024-11-22T09:16:55.512499Z","iopub.execute_input":"2024-11-22T09:16:55.512894Z","iopub.status.idle":"2024-11-22T09:17:42.550056Z","shell.execute_reply.started":"2024-11-22T09:16:55.512856Z","shell.execute_reply":"2024-11-22T09:17:42.548788Z"}},"outputs":[{"name":"stdout","text":"Collecting pyspark\n  Downloading pyspark-3.5.3.tar.gz (317.3 MB)\n\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m317.3/317.3 MB\u001b[0m \u001b[31m3.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m00:01\u001b[0m00:01\u001b[0m\n\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25ldone\n\u001b[?25hRequirement already satisfied: py4j==0.10.9.7 in /opt/conda/lib/python3.10/site-packages (from pyspark) (0.10.9.7)\nBuilding wheels for collected packages: pyspark\n  Building wheel for pyspark (setup.py) ... \u001b[?25ldone\n\u001b[?25h  Created wheel for pyspark: filename=pyspark-3.5.3-py2.py3-none-any.whl size=317840629 sha256=0b7ca385b1548267263f331c4999261cb62b660ac4b6085b445640c23186e5fe\n  Stored in directory: /root/.cache/pip/wheels/1b/3a/92/28b93e2fbfdbb07509ca4d6f50c5e407f48dce4ddbda69a4ab\nSuccessfully built pyspark\nInstalling collected packages: pyspark\nSuccessfully installed pyspark-3.5.3\n","output_type":"stream"}],"execution_count":1},{"cell_type":"code","source":"from pyspark.sql import SparkSession\n\nspark = SparkSession.builder.appName(\"pyspark_practice_4\").getOrCreate()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-22T09:17:42.552544Z","iopub.execute_input":"2024-11-22T09:17:42.553067Z","iopub.status.idle":"2024-11-22T09:17:48.200568Z","shell.execute_reply.started":"2024-11-22T09:17:42.552992Z","shell.execute_reply":"2024-11-22T09:17:48.199369Z"}},"outputs":[{"name":"stderr","text":"Setting default log level to \"WARN\".\nTo adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).\n24/11/22 09:17:45 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable\n","output_type":"stream"}],"execution_count":2},{"cell_type":"markdown","source":"## SHUFFLING - SKEWNESS - data distribution across the partitions","metadata":{}},{"cell_type":"markdown","source":"### **1. Run a schuffle *groupByKey* to see how the skew effect computation resources**","metadata":{}},{"cell_type":"code","source":"data_sample = [(1,4),(2,2),(2,1),(3,5),(2,5),(2,10),(2,7),(3,4),(2,1),(2,4),(4,4)]\nrdd_sample = spark.sparkContext.parallelize(data_sample, 3)\nrdd_sample.glom().collect()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-22T09:40:27.779119Z","iopub.execute_input":"2024-11-22T09:40:27.779553Z","iopub.status.idle":"2024-11-22T09:40:30.405277Z","shell.execute_reply.started":"2024-11-22T09:40:27.779515Z","shell.execute_reply":"2024-11-22T09:40:30.404270Z"}},"outputs":[{"name":"stderr","text":"                                                                                \r","output_type":"stream"},{"execution_count":4,"output_type":"execute_result","data":{"text/plain":"[[(1, 4), (2, 2), (2, 1)],\n [(3, 5), (2, 5), (2, 10)],\n [(2, 7), (3, 4), (2, 1), (2, 4), (4, 4)]]"},"metadata":{}}],"execution_count":4},{"cell_type":"code","source":"rdd_sample_grouped = rdd_sample.groupByKey()\n\nfor item in rdd_sample_grouped.collect():\n    print(item[0], [value for value in item[1]])\n\n# output:\n# 3 [5, 4]\n# 1 [4]\n# 4 [4]\n# 2 [2, 1, 5, 10, 7, 1, 4] --> Skewness uneven data distribution\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-22T09:44:30.360905Z","iopub.execute_input":"2024-11-22T09:44:30.361787Z","iopub.status.idle":"2024-11-22T09:44:31.770511Z","shell.execute_reply.started":"2024-11-22T09:44:30.361730Z","shell.execute_reply":"2024-11-22T09:44:31.767235Z"}},"outputs":[{"name":"stderr","text":"[Stage 1:>                                                          (0 + 3) / 3]\r","output_type":"stream"},{"name":"stdout","text":"3 [5, 4]\n1 [4]\n4 [4]\n2 [2, 1, 5, 10, 7, 1, 4]\n","output_type":"stream"},{"name":"stderr","text":"                                                                                \r","output_type":"stream"}],"execution_count":5},{"cell_type":"code","source":"# show partitions\nrdd_sample_grouped.glom().collect()\n\n# output:\n# [[(3, <pyspark.resultiterable.ResultIterable at 0x7cb6b85026e0>)],\n#  [(1, <pyspark.resultiterable.ResultIterable at 0x7cb6b8502ec0>),\n#   (4, <pyspark.resultiterable.ResultIterable at 0x7cb6b8503760>)],\n#  [(2, <pyspark.resultiterable.ResultIterable at 0x7cb6b85031f0>)]]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-22T09:48:11.942377Z","iopub.execute_input":"2024-11-22T09:48:11.942879Z","iopub.status.idle":"2024-11-22T09:48:12.342703Z","shell.execute_reply.started":"2024-11-22T09:48:11.942836Z","shell.execute_reply":"2024-11-22T09:48:12.341754Z"}},"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"[[(3, <pyspark.resultiterable.ResultIterable at 0x7cb6b85026e0>)],\n [(1, <pyspark.resultiterable.ResultIterable at 0x7cb6b8502ec0>),\n  (4, <pyspark.resultiterable.ResultIterable at 0x7cb6b8503760>)],\n [(2, <pyspark.resultiterable.ResultIterable at 0x7cb6b85031f0>)]]"},"metadata":{}}],"execution_count":6},{"cell_type":"markdown","source":"### **Solution use *SALTING***","metadata":{}},{"cell_type":"code","source":"# redistribute data by adding random value\n\nimport numpy as np\nimport random\n\nkey_1 = ['a'] * 10\nkey_2 = ['b'] * 6000000\nkey_3 = ['c'] * 800\nkey_4 = ['d'] * 10000\n\nkeys = key_1 + key_2 + key_3 + key_4\n\nrandom.shuffle(keys)\n\nvalue_1 = list(np.random.randint(low = 1, high = 100, size = len(key_1)))\nvalue_2 = list(np.random.randint(low = 1, high = 100, size = len(key_2)))\nvalue_3 = list(np.random.randint(low = 1, high = 100, size = len(key_3)))\nvalue_4 = list(np.random.randint(low = 1, high = 100, size = len(key_4)))\n\nvalues = value_1 + value_2 + value_3 + value_4\n\nvalues","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-22T10:20:04.189696Z","iopub.execute_input":"2024-11-22T10:20:04.190103Z","iopub.status.idle":"2024-11-22T10:20:08.639709Z","shell.execute_reply.started":"2024-11-22T10:20:04.190064Z","shell.execute_reply":"2024-11-22T10:20:08.638641Z"}},"outputs":[{"execution_count":16,"output_type":"execute_result","data":{"text/plain":"[83,\n 49,\n 9,\n 49,\n 49,\n 16,\n 70,\n 48,\n 45,\n 7,\n 72,\n 68,\n 47,\n 45,\n 73,\n 29,\n 95,\n 94,\n 70,\n 63,\n 42,\n 53,\n 25,\n 29,\n 37,\n 39,\n 54,\n 23,\n 54,\n 27,\n 56,\n 49,\n 55,\n 54,\n 48,\n 45,\n 43,\n 41,\n 46,\n 93,\n 49,\n 51,\n 27,\n 81,\n 58,\n 35,\n 79,\n 68,\n 96,\n 2,\n 74,\n 5,\n 22,\n 7,\n 2,\n 50,\n 97,\n 2,\n 4,\n 90,\n 24,\n 63,\n 95,\n 20,\n 81,\n 9,\n 10,\n 41,\n 73,\n 39,\n 82,\n 62,\n 49,\n 9,\n 25,\n 23,\n 14,\n 32,\n 46,\n 62,\n 39,\n 71,\n 67,\n 69,\n 20,\n 17,\n 35,\n 93,\n 20,\n 75,\n 18,\n 50,\n 86,\n 23,\n 34,\n 53,\n 13,\n 93,\n 28,\n 90,\n 70,\n 74,\n 75,\n 81,\n 37,\n 1,\n 66,\n 87,\n 35,\n 54,\n 99,\n 40,\n 2,\n 32,\n 39,\n 63,\n 28,\n 5,\n 84,\n 28,\n 89,\n 56,\n 60,\n 70,\n 3,\n 16,\n 4,\n 63,\n 60,\n 87,\n 13,\n 21,\n 69,\n 78,\n 6,\n 91,\n 14,\n 17,\n 93,\n 74,\n 15,\n 91,\n 69,\n 52,\n 60,\n 90,\n 7,\n 17,\n 93,\n 76,\n 53,\n 76,\n 17,\n 88,\n 1,\n 17,\n 24,\n 90,\n 21,\n 60,\n 83,\n 74,\n 21,\n 18,\n 57,\n 2,\n 64,\n 30,\n 40,\n 30,\n 12,\n 30,\n 14,\n 2,\n 16,\n 21,\n 40,\n 44,\n 43,\n 17,\n 36,\n 84,\n 93,\n 49,\n 72,\n 10,\n 99,\n 58,\n 42,\n 83,\n 52,\n 36,\n 95,\n 80,\n 38,\n 78,\n 59,\n 15,\n 82,\n 29,\n 4,\n 90,\n 15,\n 19,\n 97,\n 8,\n 76,\n 86,\n 17,\n 80,\n 47,\n 29,\n 13,\n 47,\n 43,\n 29,\n 35,\n 76,\n 22,\n 71,\n 13,\n 88,\n 30,\n 7,\n 22,\n 19,\n 44,\n 62,\n 70,\n 69,\n 67,\n 10,\n 3,\n 34,\n 45,\n 29,\n 68,\n 78,\n 47,\n 48,\n 85,\n 38,\n 84,\n 47,\n 94,\n 48,\n 5,\n 15,\n 88,\n 55,\n 38,\n 96,\n 47,\n 97,\n 29,\n 84,\n 44,\n 62,\n 35,\n 31,\n 46,\n 9,\n 81,\n 41,\n 46,\n 66,\n 56,\n 24,\n 25,\n 84,\n 45,\n 67,\n 43,\n 61,\n 16,\n 35,\n 85,\n 63,\n 67,\n 28,\n 13,\n 16,\n 3,\n 5,\n 38,\n 72,\n 85,\n 3,\n 80,\n 33,\n 43,\n 62,\n 9,\n 67,\n 20,\n 10,\n 78,\n 3,\n 28,\n 54,\n 5,\n 47,\n 17,\n 90,\n 91,\n 14,\n 24,\n 74,\n 31,\n 78,\n 64,\n 10,\n 18,\n 27,\n 92,\n 51,\n 9,\n 62,\n 12,\n 88,\n 23,\n 28,\n 7,\n 63,\n 30,\n 49,\n 55,\n 29,\n 66,\n 17,\n 42,\n 32,\n 45,\n 99,\n 59,\n 80,\n 14,\n 32,\n 16,\n 54,\n 63,\n 86,\n 44,\n 69,\n 17,\n 34,\n 69,\n 73,\n 87,\n 28,\n 62,\n 92,\n 85,\n 20,\n 21,\n 83,\n 99,\n 87,\n 39,\n 1,\n 61,\n 76,\n 7,\n 10,\n 75,\n 72,\n 59,\n 48,\n 39,\n 30,\n 80,\n 46,\n 76,\n 43,\n 94,\n 46,\n 85,\n 88,\n 52,\n 76,\n 85,\n 91,\n 73,\n 74,\n 81,\n 20,\n 51,\n 63,\n 24,\n 17,\n 46,\n 79,\n 38,\n 14,\n 54,\n 89,\n 85,\n 27,\n 20,\n 79,\n 91,\n 14,\n 24,\n 15,\n 72,\n 68,\n 44,\n 33,\n 66,\n 81,\n 25,\n 54,\n 6,\n 4,\n 92,\n 12,\n 5,\n 85,\n 77,\n 43,\n 95,\n 8,\n 35,\n 97,\n 74,\n 77,\n 9,\n 98,\n 49,\n 12,\n 27,\n 73,\n 33,\n 90,\n 62,\n 86,\n 1,\n 88,\n 29,\n 56,\n 22,\n 35,\n 59,\n 48,\n 20,\n 59,\n 24,\n 34,\n 56,\n 99,\n 27,\n 94,\n 5,\n 36,\n 40,\n 6,\n 21,\n 40,\n 65,\n 61,\n 34,\n 12,\n 31,\n 30,\n 47,\n 3,\n 31,\n 72,\n 17,\n 11,\n 62,\n 36,\n 25,\n 24,\n 52,\n 96,\n 19,\n 99,\n 19,\n 46,\n 53,\n 49,\n 7,\n 71,\n 52,\n 37,\n 29,\n 36,\n 57,\n 70,\n 32,\n 60,\n 9,\n 47,\n 23,\n 49,\n 67,\n 55,\n 36,\n 96,\n 50,\n 59,\n 71,\n 23,\n 56,\n 42,\n 14,\n 3,\n 29,\n 37,\n 85,\n 92,\n 97,\n 69,\n 85,\n 23,\n 54,\n 81,\n 26,\n 92,\n 86,\n 93,\n 99,\n 32,\n 90,\n 53,\n 2,\n 78,\n 48,\n 22,\n 96,\n 35,\n 75,\n 75,\n 30,\n 85,\n 91,\n 22,\n 21,\n 77,\n 20,\n 90,\n 93,\n 34,\n 88,\n 74,\n 47,\n 64,\n 87,\n 55,\n 23,\n 56,\n 3,\n 48,\n 17,\n 1,\n 98,\n 5,\n 62,\n 41,\n 3,\n 73,\n 74,\n 3,\n 69,\n 94,\n 56,\n 9,\n 13,\n 7,\n 74,\n 73,\n 24,\n 48,\n 24,\n 49,\n 75,\n 37,\n 39,\n 27,\n 43,\n 97,\n 96,\n 88,\n 34,\n 9,\n 33,\n 56,\n 54,\n 32,\n 53,\n 73,\n 8,\n 40,\n 86,\n 17,\n 1,\n 39,\n 71,\n 89,\n 48,\n 6,\n 56,\n 97,\n 93,\n 39,\n 96,\n 14,\n 31,\n 63,\n 55,\n 63,\n 20,\n 83,\n 71,\n 5,\n 48,\n 53,\n 70,\n 63,\n 95,\n 84,\n 18,\n 22,\n 68,\n 24,\n 34,\n 4,\n 16,\n 51,\n 86,\n 19,\n 42,\n 59,\n 4,\n 61,\n 22,\n 21,\n 47,\n 80,\n 36,\n 59,\n 38,\n 47,\n 56,\n 58,\n 39,\n 7,\n 6,\n 58,\n 1,\n 90,\n 17,\n 96,\n 51,\n 87,\n 88,\n 43,\n 6,\n 17,\n 33,\n 57,\n 12,\n 56,\n 96,\n 88,\n 42,\n 99,\n 43,\n 4,\n 74,\n 86,\n 72,\n 82,\n 33,\n 89,\n 17,\n 22,\n 97,\n 36,\n 18,\n 40,\n 77,\n 66,\n 64,\n 85,\n 35,\n 81,\n 20,\n 36,\n 19,\n 90,\n 17,\n 60,\n 58,\n 19,\n 79,\n 49,\n 44,\n 45,\n 18,\n 47,\n 67,\n 14,\n 78,\n 46,\n 47,\n 77,\n 79,\n 45,\n 39,\n 88,\n 94,\n 11,\n 96,\n 59,\n 60,\n 27,\n 95,\n 14,\n 36,\n 56,\n 13,\n 82,\n 94,\n 93,\n 15,\n 52,\n 29,\n 68,\n 78,\n 95,\n 11,\n 80,\n 85,\n 22,\n 9,\n 20,\n 41,\n 43,\n 71,\n 78,\n 73,\n 90,\n 15,\n 28,\n 63,\n 81,\n 74,\n 11,\n 43,\n 19,\n 37,\n 22,\n 4,\n 54,\n 49,\n 37,\n 58,\n 45,\n 49,\n 2,\n 27,\n 29,\n 53,\n 34,\n 56,\n 83,\n 4,\n 59,\n 25,\n 22,\n 97,\n 88,\n 75,\n 35,\n 81,\n 59,\n 41,\n 38,\n 2,\n 76,\n 88,\n 52,\n 54,\n 19,\n 12,\n 77,\n 87,\n 45,\n 67,\n 77,\n 74,\n 70,\n 36,\n 16,\n 37,\n 5,\n 5,\n 89,\n 50,\n 60,\n 12,\n 51,\n 57,\n 70,\n 87,\n 60,\n 53,\n 26,\n 61,\n 44,\n 41,\n 19,\n 89,\n 78,\n 92,\n 82,\n 45,\n 53,\n 17,\n 15,\n 18,\n 96,\n 84,\n 49,\n 97,\n 28,\n 1,\n 73,\n 51,\n 1,\n 88,\n 83,\n 3,\n 62,\n 25,\n 83,\n 80,\n 58,\n 72,\n 35,\n 20,\n 90,\n 88,\n 7,\n 72,\n 40,\n 25,\n 70,\n 31,\n 75,\n 77,\n 4,\n 5,\n 17,\n 59,\n 40,\n 13,\n 79,\n 52,\n 57,\n 78,\n 60,\n 3,\n 81,\n 38,\n 74,\n 54,\n 12,\n 24,\n 23,\n 75,\n 42,\n 11,\n 83,\n 48,\n 78,\n 90,\n 75,\n 25,\n 76,\n 5,\n 18,\n 12,\n 21,\n 27,\n 59,\n 57,\n 83,\n 35,\n 29,\n 73,\n 83,\n 13,\n 58,\n 83,\n 41,\n 67,\n 35,\n 19,\n 84,\n 34,\n 17,\n 26,\n 91,\n 20,\n 16,\n 80,\n 12,\n 87,\n 26,\n 84,\n 31,\n 3,\n 8,\n 26,\n 85,\n 25,\n 28,\n 34,\n 25,\n 28,\n 66,\n 4,\n 24,\n 66,\n 73,\n 91,\n 87,\n 24,\n 71,\n 98,\n 46,\n 5,\n 95,\n 37,\n 39,\n 10,\n 65,\n 69,\n 95,\n 56,\n 98,\n 7,\n 32,\n 31,\n 74,\n 39,\n 25,\n 28,\n 19,\n 55,\n 40,\n 26,\n 41,\n 5,\n 66,\n 66,\n 98,\n 72,\n 23,\n 63,\n 16,\n 22,\n 96,\n 7,\n 16,\n 92,\n 88,\n 88,\n 8,\n 55,\n 99,\n 84,\n 36,\n 87,\n 97,\n 64,\n 13,\n 91,\n 93,\n 87,\n 65,\n 27,\n 54,\n 35,\n 53,\n 50,\n 17,\n 17,\n 97,\n 25,\n 45,\n 48,\n 10,\n 59,\n 98,\n 21,\n 25,\n ...]"},"metadata":{}}],"execution_count":16},{"cell_type":"markdown","source":"","metadata":{}}]}