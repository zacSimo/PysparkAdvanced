{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":9944016,"sourceType":"datasetVersion","datasetId":6114421}],"dockerImageVersionId":30786,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"!pip install pyspark","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2024-11-20T08:01:31.575169Z","iopub.execute_input":"2024-11-20T08:01:31.575528Z","iopub.status.idle":"2024-11-20T08:02:16.317136Z","shell.execute_reply.started":"2024-11-20T08:01:31.575498Z","shell.execute_reply":"2024-11-20T08:02:16.316143Z"}},"outputs":[{"name":"stdout","text":"Collecting pyspark\n  Downloading pyspark-3.5.3.tar.gz (317.3 MB)\n\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m317.3/317.3 MB\u001b[0m \u001b[31m4.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m00:01\u001b[0m00:01\u001b[0m\n\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25ldone\n\u001b[?25hRequirement already satisfied: py4j==0.10.9.7 in /opt/conda/lib/python3.10/site-packages (from pyspark) (0.10.9.7)\nBuilding wheels for collected packages: pyspark\n  Building wheel for pyspark (setup.py) ... \u001b[?25ldone\n\u001b[?25h  Created wheel for pyspark: filename=pyspark-3.5.3-py2.py3-none-any.whl size=317840629 sha256=b755d1a0453eac424e0e093a99c8ead008e02fe5482e068ddbc8752d5eb7f7fa\n  Stored in directory: /root/.cache/pip/wheels/1b/3a/92/28b93e2fbfdbb07509ca4d6f50c5e407f48dce4ddbda69a4ab\nSuccessfully built pyspark\nInstalling collected packages: pyspark\nSuccessfully installed pyspark-3.5.3\n","output_type":"stream"}],"execution_count":1},{"cell_type":"code","source":"from pyspark.sql import SparkSession\n\nspark = SparkSession.builder.appName(\"pyspark_practice_2\").getOrCreate()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-20T08:06:11.828093Z","iopub.execute_input":"2024-11-20T08:06:11.830533Z","iopub.status.idle":"2024-11-20T08:06:18.941925Z","shell.execute_reply.started":"2024-11-20T08:06:11.830434Z","shell.execute_reply":"2024-11-20T08:06:18.940701Z"}},"outputs":[{"name":"stderr","text":"Setting default log level to \"WARN\".\nTo adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).\n24/11/20 08:06:16 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable\n","output_type":"stream"}],"execution_count":2},{"cell_type":"code","source":"spark.sparkContext.setLogLevel(\"ERROR\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-20T08:06:18.944533Z","iopub.execute_input":"2024-11-20T08:06:18.945403Z","iopub.status.idle":"2024-11-20T08:06:18.953475Z","shell.execute_reply.started":"2024-11-20T08:06:18.945361Z","shell.execute_reply":"2024-11-20T08:06:18.952279Z"}},"outputs":[],"execution_count":3},{"cell_type":"code","source":"df = spark.read.text(\"/kaggle/input/kddcup/kddcup.data\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-20T08:06:18.954839Z","iopub.execute_input":"2024-11-20T08:06:18.955251Z","iopub.status.idle":"2024-11-20T08:06:21.685133Z","shell.execute_reply.started":"2024-11-20T08:06:18.955214Z","shell.execute_reply":"2024-11-20T08:06:21.683990Z"}},"outputs":[],"execution_count":4},{"cell_type":"code","source":"df.show(2,truncate=False)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-20T08:06:21.687220Z","iopub.execute_input":"2024-11-20T08:06:21.687724Z","iopub.status.idle":"2024-11-20T08:06:25.962348Z","shell.execute_reply.started":"2024-11-20T08:06:21.687663Z","shell.execute_reply":"2024-11-20T08:06:25.961201Z"}},"outputs":[{"name":"stdout","text":"+--------------------------------------------------------------------------------------------------------------------------------------------------+\n|value                                                                                                                                             |\n+--------------------------------------------------------------------------------------------------------------------------------------------------+\n|0,tcp,http,SF,215,45076,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0.00,0.00,0.00,0.00,1.00,0.00,0.00,0,0,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,normal.|\n|0,tcp,http,SF,162,4528,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,2,2,0.00,0.00,0.00,0.00,1.00,0.00,0.00,1,1,1.00,0.00,1.00,0.00,0.00,0.00,0.00,0.00,normal. |\n+--------------------------------------------------------------------------------------------------------------------------------------------------+\nonly showing top 2 rows\n\n","output_type":"stream"}],"execution_count":5},{"cell_type":"code","source":"import pyspark.sql.functions as f\n\nsplit_col = f.split(df['value'], ',')\ncols = [\"duration\",\n        \"protocol_type\",\n        \"service\",\n        \"flag\",\n        \"src_bytes\",\n        \"dst_bytes\",\n        \"land\",\n        \"wrong_fragment\",\n        \"urgent\",\n        \"hot\",\n        \"num_failed_logins\",\n        \"logged_in\",\n        \"num_compromised\",\n        \"root_shell\",\n        \"su_attempted\",\n        \"num_root\",\n        \"num_file_creations\",\n        \"num_shells\",\n        \"num_access_files\",\n        \"num_outbound_cmds\",\n        \"is_host_login\",\n        \"is_guest_login\",\n        \"count\",\n        \"srv_count\",\n        \"serror_rate\",\n        \"srv_serror_rate\",\n        \"rerror_rate\",\n        \"srv_rerror_rate\",\n        \"same_srv_rate\",\n        \"diff_srv_rate\",\n        \"srv_diff_host_rate\",\n        \"dst_host_count\",\n        \"dst_host_srv_count\",\n        \"dst_host_same_srv_rate\",\n        \"dst_host_diff_srv_rate\",\n        \"dst_host_same_src_port_rate\",\n        \"dst_host_srv_diff_host_rate\",\n        \"dst_host_serror_rate\",\n        \"dst_host_srv_serror_rate\",\n        \"dst_host_rerror_rate\",\n        \"dst_host_srv_rerror_rate\",\n        \"label\"\n       ]\n\ndf_f = (df.withColumn(cols[0], split_col[0]).withColumn(cols[1], split_col[1]).withColumn(cols[2], split_col[2]).withColumn(cols[3], split_col[3])\n        .withColumn(cols[4], split_col[4]).withColumn(cols[5], split_col[5]).withColumn(cols[6], split_col[6]).withColumn(cols[7], split_col[7])\n        .withColumn(cols[8], split_col[8]).withColumn(cols[9], split_col[9]).withColumn(cols[10], split_col[10]).withColumn(cols[11], split_col[11])\n        .withColumn(cols[12], split_col[12])\n        .withColumn(cols[13], split_col[13]).withColumn(cols[14], split_col[14]).withColumn(cols[15], split_col[15]).withColumn(cols[16], split_col[16])\n        .withColumn(cols[17], split_col[17]).withColumn(cols[18], split_col[18]).withColumn(cols[19], split_col[19]).withColumn(cols[20], split_col[20])\n        .withColumn(cols[21], split_col[21]).withColumn(cols[22], split_col[22]).withColumn(cols[23], split_col[23]).withColumn(cols[24], split_col[24])\n        .withColumn(cols[26], split_col[26]).withColumn(cols[27], split_col[27]).withColumn(cols[28], split_col[28]).withColumn(cols[29], split_col[29])\n        .withColumn(cols[30], split_col[30]).withColumn(cols[31], split_col[31]).withColumn(cols[32], split_col[32]).withColumn(cols[33], split_col[33])\n        .withColumn(cols[34], split_col[34]).withColumn(cols[35], split_col[35]).withColumn(cols[36], split_col[36]).withColumn(cols[37], split_col[37])\n        .withColumn(cols[38] , split_col[38]).withColumn(cols[39], split_col[39]).withColumn(cols[40], split_col[40]).withColumn(cols[41], split_col[41])\n        .drop(\"value\")\n       )","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-20T08:06:25.965009Z","iopub.execute_input":"2024-11-20T08:06:25.965693Z","iopub.status.idle":"2024-11-20T08:06:27.052808Z","shell.execute_reply.started":"2024-11-20T08:06:25.965634Z","shell.execute_reply":"2024-11-20T08:06:27.051617Z"}},"outputs":[],"execution_count":6},{"cell_type":"code","source":"df_f.show(1,vertical=True,truncate=False)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-20T08:06:27.054669Z","iopub.execute_input":"2024-11-20T08:06:27.055153Z","iopub.status.idle":"2024-11-20T08:06:27.966587Z","shell.execute_reply.started":"2024-11-20T08:06:27.055098Z","shell.execute_reply":"2024-11-20T08:06:27.965515Z"}},"outputs":[{"name":"stdout","text":"-RECORD 0------------------------------\n duration                    | 0       \n protocol_type               | tcp     \n service                     | http    \n flag                        | SF      \n src_bytes                   | 215     \n dst_bytes                   | 45076   \n land                        | 0       \n wrong_fragment              | 0       \n urgent                      | 0       \n hot                         | 0       \n num_failed_logins           | 0       \n logged_in                   | 1       \n num_compromised             | 0       \n root_shell                  | 0       \n su_attempted                | 0       \n num_root                    | 0       \n num_file_creations          | 0       \n num_shells                  | 0       \n num_access_files            | 0       \n num_outbound_cmds           | 0       \n is_host_login               | 0       \n is_guest_login              | 0       \n count                       | 1       \n srv_count                   | 1       \n serror_rate                 | 0.00    \n rerror_rate                 | 0.00    \n srv_rerror_rate             | 0.00    \n same_srv_rate               | 1.00    \n diff_srv_rate               | 0.00    \n srv_diff_host_rate          | 0.00    \n dst_host_count              | 0       \n dst_host_srv_count          | 0       \n dst_host_same_srv_rate      | 0.00    \n dst_host_diff_srv_rate      | 0.00    \n dst_host_same_src_port_rate | 0.00    \n dst_host_srv_diff_host_rate | 0.00    \n dst_host_serror_rate        | 0.00    \n dst_host_srv_serror_rate    | 0.00    \n dst_host_rerror_rate        | 0.00    \n dst_host_srv_rerror_rate    | 0.00    \n label                       | normal. \nonly showing top 1 row\n\n","output_type":"stream"}],"execution_count":7}]}